version: "3.8"

services:
  backend-graphql-api-service:
    build:
      dockerfile: Dockerfile
      context: ./backend-graphql-api-service
      # Only build development stage from Dockerfile
      target: development
    # Mount our host dir to the docker container
    # Mount api directory (./api) to (:) docker container (/thomas/src/app)
    # Reflect File changes from host to container
    volumes:
      - ./backend-graphql-api-service:/usr/src/app
      - /usr/src/app/node_modules/
    # RUN in debug mode: npm run start:debug --> Also start your vscode debugger
    # Run in dev mode: npm run start:dev
    command: npm run start:dev
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgres://postgres:reddy@postgres:5432/student
      NODE_ENV: development
      PORT: 8000
      REDIS_URL: redis://redis:6379
    ports:
      - 8000:8000
  backend-bulljs:
    build:
      dockerfile: Dockerfile
      context: ./backend-bulljs
      # Only build development stage from Dockerfile
      target: development
    # Mount our host dir to the docker container
    # Mount api directory (./api) to (:) docker container (/thomas/src/app)
    # Reflect File changes from host to container
    volumes:
      - ./backend-bulljs:/usr/src/app
      - /usr/src/app/node_modules/
    # RUN in debug mode: npm run start:debug --> Also start your vscode debugger
    # Run in dev mode: npm run start:dev
    command: npm run start:dev
    depends_on:
      - redis
    environment:
      NODE_ENV: development
      PORT: 4001
      REDIS_URL: redis://localhost:6379
    ports:
      - 4001:4001
  nestjs-postgraphile:
    build:
      dockerfile: Dockerfile
      context: ./nestjs-postgraphile
      # Only build development stage from Dockerfile
      target: development
    # Mount our host dir to the docker container
    # Mount api directory (./api) to (:) docker container (/thomas/src/app)
    # Reflect File changes from host to container
    volumes:
      - ./nestjs-postgraphile:/usr/src/app
      - /usr/src/app/node_modules/
    # RUN in debug mode: npm run start:debug --> Also start your vscode debugger
    # Run in dev mode: npm run start:dev
    command: npm run start:dev
    depends_on:
      - postgres
        - redis
    environment:
      DATABASE_URL: postgres://postgres:reddy@postgres:5432/student
      NODE_ENV: development
      PORT: 5000
      REDIS_URL: redis://localhost:6379
    ports:
      - 5000:5000
  frontend-angular-ui:
    build:
      dockerfile: Dockerfile
      context: ./frontend-angular-ui
      target: development
    command: npm run start
    volumes:
      - ./frontend-angular-ui:/usr/frontend/src/app
      - /usr/frontend/src/app/node_modules
    ports:
      - 4200:4200
    links:
      - backend-graphql-api-service
      - backend-bulljs
      - nestjs-postgraphile

  postgres:
    image: postgres:10.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: reddy
      POSTGRES_DB: student
    ports:
      - 5432:5432

  redis:
    image: redis
    container_name: redis_container_1
    environment:
      - ALLOW_EMPTY_PASSWORD-yes
    ports:
      - 6379:6379

  redis-commander:
    container_name: redis_commander_container_1
    image: rediscommander/redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
  socket:
    build:
      dockerfile: Dockerfile
      context: ./socketCluster
    volumes:
      - ./socketCluster:/usr/src/
      - /usr/src/node_modules/
    restart: always
    environment:
      PORT: 8002
    ports:
      - 8002:8002
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 5050:80
